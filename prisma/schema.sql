DROP DATABASE IF EXISTS "nexus_groups";
CREATE DATABASE "nexus_groups";

CREATE TYPE MEMBERSHIP_STATUS AS ENUM('PENDING', 'APPROVED', 'DENIED');
CREATE TYPE MEMBERSHIP_ROLE AS ENUM('MEMBER', 'ADMIN', 'TRADER');
CREATE TYPE PAYOUT_CURRENCY AS ENUM('BTC', 'ETH', 'LTC');

CREATE TABLE "public"."Group" (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  "description" TEXT NOT NULL,
  "active" BOOLEAN NOT NULL DEFAULT TRUE,
  telegram VARCHAR(255),
  discord VARCHAR(255),
  email VARCHAR(255),
  "payoutAddress" VARCHAR(255),
  "payoutCurrency" PAYOUT_CURRENCY NOT NULL DEFAULT 'BTC',
  "payInPlatform" BOOLEAN NOT NULL DEFAULT FALSE,
  "createdAt" TIMESTAMP NOT NULL DEFAULT now(),
  "updatedAt" TIMESTAMP NOT NULL DEFAULT now(),
  UNIQUE("name")
);

CREATE TABLE "public"."GroupMembership" (
  id SERIAL PRIMARY KEY NOT NULL,
  "memberId" INTEGER NOT NULL,
  "groupId" INTEGER NOT NULL,
  "active" BOOLEAN NOT NULL DEFAULT FALSE,
  "role" MEMBERSHIP_ROLE NOT NULL DEFAULT 'MEMBER',
  "status" MEMBERSHIP_STATUS NOT NULL DEFAULT 'PENDING',
  "createdAt" TIMESTAMP NOT NULL DEFAULT now(),
  "updatedAt" TIMESTAMP NOT NULL DEFAULT now(),
  FOREIGN KEY ("groupId") REFERENCES "public"."Group"(id),
  UNIQUE("memberId", "groupId")
);

CREATE TABLE "public"."GroupMembershipOption" (
  id SERIAL PRIMARY KEY NOT NULL,
  "groupId" INTEGER NOT NULL,
  "membershipFee" NUMERIC NOT NULL,
  "membershipLength" INTEGER NOT NULL,
  "createdAt" TIMESTAMP NOT NULL DEFAULT now(),
  "updatedAt" TIMESTAMP NOT NULL DEFAULT now(),
  FOREIGN KEY ("groupId") REFERENCES "public"."Group"(id)
);