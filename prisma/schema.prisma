generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["insensitiveFilters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Group {
  id                Int                     @default(autoincrement()) @id
  name              String                  @unique
  createdAt         DateTime                @default(now())
  active            Boolean                 @default(true)
  description       String
  telegram          String?
  discord           String?
  email             String?
  payoutAddress     String?
  payoutCurrency    PayoutCurrency          @default(BTC)
  payInPlatform     Boolean                 @default(false)
  members           GroupMembership[]
  membershipOptions GroupMembershipOption[]
}

model GroupMembership {
  id       Int              @default(autoincrement()) @id
  memberId Int
  groupId  Int
  active   Boolean          @default(false)
  role     MembershipRole   @default(MEMBER)
  status   MembershipStatus @default(PENDING)
  group    Group            @relation(fields: [groupId], references: [id])

  @@unique([memberId, groupId], name: "GroupMembership_memberId_groupId_key")
}

model GroupMembershipOption {
  id               Int   @default(autoincrement()) @id
  groupId          Int
  membershipFee    Float
  membershipLength Int
  group            Group @relation(fields: [groupId], references: [id])
}

enum MembershipRole {
  ADMIN
  MEMBER
  TRADER
}

enum MembershipStatus {
  APPROVED
  DENIED
  PENDING
}

enum PayoutCurrency {
  BTC
  ETH
  LTC
}
